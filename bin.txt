export const encode = (text,rails) => {
	var pos = 0;
  	var fence=emptyFence(rails);       
  	var result = '';
	var div = 2 * rails - 2;

	for (let i=0; i<=text.length; i++) {
		let pos = i % div - Math.max( 0, ( ( i%div - rails + 1 ) * 2 ) );
		fence[pos].push(text[i]);
	}

	for (let i=0; i<rails; i++) {
		result += fence[i].join('');
	}
	return result;
};

export const decode = (text,rails) => {
	var pos = 0;
	var fence=[];
	var result = '';

	const div = 2 * rails - 2;
	const rem = text.length % div;

	var len = Math.ceil(text.length/div);
	fence.push(text.substring(0,len));

	var start = len; 
	for (let i=1; i<rails; i++) {
		len = Math.trunc(text.length/div)*2;
		len += Math.min(Math.max(rem-i,0),1);
		len += Math.min(Math.max(rem-rails*2+i+2,0),1);
		fence.push(text.substring(start,start+len));
		start += len;
	}

	fence.push( Math.ceil( (text.length - rails + 1 ) / div ) );

	for (let i=0; i<text.length; i++) {
		let pos = i % div - Math.max( 0, ( ( i%div - rails + 1 ) * 2 ) );
		result += fence[pos][0];
		fence[pos] = fence[pos].slice(1);
	}
	return result;
};

const emptyFence = (rails) => {
	let fence = [];
	for (let i=0; i<rails; i++) { fence.push([]) };
	return fence
}